PESSOAL, nosso lab hoje consiste em:
Instalar e configurar o kubernetes
instalar metrics server kubernetes
instalar e configurar o helm chart
instalando e configurando o prometheus operator
instalando e configurando o grafana server
configurar o prometheus server para exportar métricas do nosso cluster k8s no grafana
Acesso e overview das interfaces gráficas

O como fazer, podemos subir o https://kind.sigs.k8s.io/ direto no SO,  Linux  Macos, ou em uma instancia na nuvem.  também existe a opção de subir no windows, mas quem optar por isso terá que seguir a doc, não testado. 

ou subir o vagrant com ubuntu 20.04 e configurarmos la... 


Passo 1, entrar no diretório: ~/continuous_monitoring_labs/environmentclass/Exercicio2

Passo 2: se for usar o SO ignore esse passo, execute: vagrant up  ( cassp ocorra erro relacioando ao openssl 3.0 execute:   ssh-add -D e tente o vagrant up de novo)

passo 3: acesse o servidor: vagrant ssh 

passo 4: baixa o script de setup: wget https://raw.githubusercontent.com/taylordamaceno/continuous_monitoring_labs/main/Exercicio2/setup.sh e de permissão
 chmod +x setup.sh
passo 5: execute o script ./setup.sh 

passo 6:  criando o cluster k8s com o kind: 
 ./kind create cluster --name aulaprometheus

 Criando namespace: 

 kubectl create ns monitoring 

 Preparando helm:
 helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
 helm repo update

 Instalando a stack do prometheus com helm 
 helm upgrade --namespace monitoring --install kube-stack-prometheus prometheus-community/kube-prometheus-stack --set prometheus-node-exporter.hostRootFsMount.enabled=false

 Configurando/acessando a interface gráfica do prometheus:

 kubectl port-forward --namespace monitoring svc/kube-stack-prometheus-kube-prometheus 9090:9090

 acesso a interface via browser: http://localhost:9090

 Vá na aba status, target, e veja os endpoints do self discovery do prometheus

 Parte 2: 



 







